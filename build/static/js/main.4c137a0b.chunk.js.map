{"version":3,"sources":["components/Card/Card.tsx","components/Header/Header.tsx","pages/shows/Shows.tsx","services/showsService.ts","components/carousel/Carousel.tsx","pages/information/Information.tsx","utils/index.ts","routes/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Card","thumbnail","title","description","onClick","className","alt","src","Header","withRouter","router","useHistory","useState","shows","setShows","getAllShows","Promise","resolve","reject","a","console","log","process","REACT_APP_API_URL","axios","get","response","data","then","useEffect","length","map","item","push","pathname","state","show","image","medium","name","status","id","Item","url","Carousel","images","settings","dots","infinite","speed","slidesToShow","isMobile","slidesToScroll","autoplay","autoplaySpeed","pauseOnHover","adaptiveHeight","cssEase","centerMode","centerPadding","i","resolutions","original","str","setImages","useLocation","getImagesByShowId","getImages","width","height","summary","replace","genres","join","premiered","language","rating","average","emptySymbol","placeholderSymbol","fullSymbol","stop","placeholderRating","Routes","path","exact","component","Shows","Information","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4c137a0b.chunk.js","sourcesContent":["\r\nimport './Card.scss'\r\n\r\ninterface Props {\r\n    thumbnail: string;\r\n    title: string;\r\n    description: string;\r\n    onClick: () => void;\r\n};\r\n\r\nconst defaultImg = 'images/default.jpg';\r\n\r\nexport const Card = ({thumbnail = defaultImg, title, description, onClick}: Props) => {\r\n    return (\r\n        <div className=\"card\" onClick={onClick}>\r\n            <div className=\"thumbContainer\">\r\n             <img alt='img' className=\"thumb\" src={thumbnail}/>\r\n            </div>\r\n            <div className=\"title\">{title}</div>\r\n            <div className=\"description\">{description}</div>\r\n        </div>\r\n    )\r\n}\r\n","import './Header.scss'\r\n\r\ninterface Props {\r\n  title: string\r\n}\r\n\r\nexport const Header = ({ title }: Props) => {\r\n  return (\r\n    <div className=\"header\">\r\n      <div className=\"title\">{title}</div>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\n\r\n// Import Components\r\nimport { Card } from '../../components/Card/Card'\r\nimport { Header } from '../../components/Header/Header'\r\n\r\n// shows Service\r\nimport { getShows } from '../../services/showsService'\r\n\r\nimport { useHistory, withRouter } from 'react-router'\r\n\r\n// Import CSS\r\nimport './Shows.scss'\r\n\r\nconst Shows = () => {\r\n  const router = useHistory()\r\n  const [shows, setShows] = useState([] as any)\r\n  const getAllShows = () => {\r\n    getShows().then((data) => {\r\n      setShows(data)\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    getAllShows()\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <Header title=\"TV SHOWS\" />\r\n        <div className=\"body-wrapper\">\r\n          {shows.length\r\n            ? shows.map((item: any) => (\r\n                <Card\r\n                  key={item.show.id}\r\n                  onClick={() =>\r\n                    router.push({\r\n                      pathname: '/information',\r\n                      state: { show: item },\r\n                    })\r\n                  }\r\n                  thumbnail={item.show.image?.medium}\r\n                  title={item.show.name}\r\n                  description={item.show?.status}\r\n                />\r\n              ))\r\n            : null}\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default withRouter(Shows)\r\n","import axios from 'axios'\r\n\r\n// get shows\r\nexport const getShows = () => {\r\n  return new Promise<any>(async (resolve, reject) => {\r\n    console.log(process.env.REACT_APP_API_URL, 'url')\r\n    try {\r\n      const response = await axios.get(\r\n        'http://api.tvmaze.com/search/shows?q=girls',\r\n      )\r\n      resolve(response.data)\r\n    } catch (err) {\r\n      reject(err)\r\n    }\r\n  })\r\n}\r\n\r\n// get images by show id\r\nexport const getImages = (id: number) => {\r\n  return new Promise<any>(async (resolve, reject) => {\r\n    try {\r\n      const response = await axios.get(\r\n        `https://api.tvmaze.com/shows/${id}/images`,\r\n      )\r\n      resolve(response.data)\r\n    } catch (err) {\r\n      reject(err)\r\n    }\r\n  })\r\n}\r\n","import Slider from 'react-slick'\r\nimport { isMobile } from 'react-device-detect'\r\n\r\ninterface ItemProps {\r\n  url: string | undefined\r\n}\r\n\r\nconst defaultImg = 'images/default.jpg'\r\n\r\nconst Item = ({ url = defaultImg }: ItemProps) => {\r\n  return <img alt=\"img\" className=\"imageCarousel\" src={url} />\r\n}\r\n\r\ninterface CarouselProps {\r\n  images: Array<{\r\n    resolutions: {\r\n      original: {\r\n        url: string\r\n      }\r\n    }\r\n  }>\r\n}\r\n\r\nexport const Carousel = ({ images }: CarouselProps) => {\r\n  const settings = {\r\n    dots: true,\r\n    infinite: true,\r\n    speed: 500,\r\n    slidesToShow: !isMobile ? 3 : 1,\r\n    slidesToScroll: 1,\r\n    autoplay: true,\r\n    autoplaySpeed: 3000,\r\n    pauseOnHover: true,\r\n    adaptiveHeight: isMobile,\r\n    cssEase: 'linear',\r\n    centerMode: !isMobile ? true : false,\r\n    centerPadding: '0px',\r\n  }\r\n\r\n  return (\r\n    <Slider data-testid=\"carousel\" {...settings}>\r\n      {images.map((item, i): any => (\r\n        <Item key={i} url={item.resolutions.original?.url} />\r\n      ))}\r\n    </Slider>\r\n  )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\n\r\n// import COMPONENTS\r\nimport { Header } from '../../components/Header/Header'\r\nimport { Carousel } from '../../components/carousel/Carousel'\r\nimport { cleanText } from '../../utils/'\r\nimport Rating from 'react-rating'\r\n\r\n// IMPORT styles\r\nimport './Information.scss'\r\n\r\n// router\r\nimport { withRouter } from 'react-router'\r\nimport { useLocation } from 'react-router-dom'\r\n\r\n//services\r\nimport { getImages } from '../../services/showsService'\r\nconst defaultImg = 'images/default.jpg'\r\n\r\nconst Information = () => {\r\n  const [images, setImages] = useState([])\r\n  const { state } = useLocation()\r\n  const { show }: any = state\r\n\r\n  const getImagesByShowId = (id: number) => {\r\n    getImages(id).then((data) => {\r\n      setImages(data)\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    getImagesByShowId(show.show.id)\r\n  }, [])\r\n  return (\r\n    <>\r\n      <Header title={show.show.name} />\r\n      <div className=\"content-wrapper\">\r\n        <div className=\"show-info\">\r\n          <div className=\"show-image\">\r\n            <img\r\n              className=\"img\"\r\n              alt=\"show img\"\r\n              width={350}\r\n              height=\"auto\"\r\n              src={show.show.image?.original || defaultImg}\r\n            />\r\n          </div>\r\n          <div>\r\n            <div className=\"summary-wrapper\">\r\n              {cleanText(show.show?.summary)}\r\n            </div>\r\n            <div className=\"summary-wrapper\">\r\n              Genre:\r\n              {show.show?.genres.map((item: string) => item).join(', ') ||\r\n                'No Data'}\r\n            </div>\r\n            <div className=\"summary-wrapper\">\r\n              Premiered: {show.show?.premiered || 'No Data'}\r\n            </div>\r\n            <div className=\"summary-wrapper\">\r\n              Language: {show.show.language || 'No Data'}\r\n            </div>\r\n            <div className=\"rating\">\r\n              <p className=\"rating-text\">\r\n                Rating: {show.show.rating.average || 'No Data'}\r\n              </p>\r\n              <Rating\r\n                emptySymbol={\r\n                  <img\r\n                    alt=\"empty\"\r\n                    width={20}\r\n                    height={20}\r\n                    src=\"images/star-black.png\"\r\n                  />\r\n                }\r\n                placeholderSymbol={\r\n                  <img\r\n                    alt=\"placeholder\"\r\n                    width={20}\r\n                    height={20}\r\n                    src=\"images/star-yellow.png\"\r\n                  />\r\n                }\r\n                fullSymbol={\r\n                  <img\r\n                    alt=\"full\"\r\n                    width={20}\r\n                    height={20}\r\n                    src=\"images/star-yellow.png\"\r\n                  />\r\n                }\r\n                stop={10}\r\n                placeholderRating={show.show.rating.average}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"gallery\">Gallery</div>\r\n        <div className=\"slider-wrapper\">\r\n          <Carousel images={images} />\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default withRouter(Information)\r\n","//clean regex\r\nexport const cleanText = (str: String): any => {\r\n  return str?.replace(/<\\/?[^>]+(>|$)/g, '')\r\n}\r\n","import React from 'react'\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\r\nimport Shows from '../pages/shows/Shows'\r\nimport Information from '../pages/information/Information'\r\n\r\nconst Routes = () => {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route path=\"/\" exact component={Shows} />\r\n        <Route path=\"/information\" component={Information} />\r\n      </Switch>\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default Routes\r\n","import React from 'react';\nimport Routes from './routes';\n\nimport './App.scss';\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Routes />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}